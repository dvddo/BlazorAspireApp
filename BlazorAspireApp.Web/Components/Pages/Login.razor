@page "/login"
@using static BlazorAspireApp.Web.AuthorizationApiClient
@rendermode InteractiveServer
@inject AuthorizationApiClient authApi
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
<h3>Login</h3>

@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}

@code {
    private LoginModel loginModel = new LoginModel();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            LoginResponse response = await authApi.LoginAsync(loginModel.Username, loginModel.Password);
            // Replace this with your actual authentication logic
            if (response.expiresIn > 0)

            {
                // Store the token or user information in local storage or sessionresponse.accessToken
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "accessToken", response.accessToken);
                errorMessage = null;
                // Redirect or handle successful login
                Console.WriteLine("Login successful!");
                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = "Invalid username or password.";
            }
        }
        catch(Exception ex)
        {
            errorMessage = "login failed.";
        }

    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Username is required.")]
        public string Username { get; set; } = string.Empty;

        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; } = string.Empty;
    }

}

<PageTitle>Log in</PageTitle>

<div class="row">
    <div class="col-lg-6">
        <section>
            <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-floating mb-3">
                    
                    <InputText id="username" @bind-Value="loginModel.Username" class="form-control" />
                    <ValidationMessage For="@(() => loginModel.Username)" />
                    <label for="username" class="form-label">Username:</label>
                </div>
                <div class="form-floating mb-3">
                    
                    <InputText id="password" @bind-Value="loginModel.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => loginModel.Password)" />
                    <label for="password" class="form-label">Password:</label>
                </div>

                <div>
                    <button type="submit" class="w-100 btn btn-lg btn-primary">Login</button>
                </div>
            </EditForm>
        </section>
    </div>
</div>
